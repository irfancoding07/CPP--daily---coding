  #include <iostream>
#include <stack>
using namespace std;

 struct Queue {
    stack<int> s1, s2;

     
    void enqueue(int x) {
          
        
        // Move all elements from s1 to s2
        while (!s1.empty()) {
            int value = s1.top();
            s1.pop();
            s2.push(value);
        }
        
        // Push the new item into s1
           s1.push(x);

        // Push everything back to s1
         while (!s2.empty()) {
             int value = s2.top();
              s2.pop();
            s1.push(value);
            
        } 
    }

     
    int dequeue() {
        if (s1.empty()) {
            return -1; // Queue underflow
        }
        int ans = s1.top();
        s1.pop();
        return ans;
    }

    // Front operation
    int front() {
        if (s1.empty()) {
            return -1; 
        }
        return  s1.top();
    }

     // Size operation
    int size() {
        return s1.size();
    }
};

 
int main() {
    Queue q;
    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);

    cout << "Front: " << q.front() << endl; 
    cout << "Size: " << q.size() << endl;  

    cout << q.dequeue() << endl;     
    cout << "Front: " << q.front() << endl ;   
    cout << "Size: " << q.size() << endl ;    

    cout << q.dequeue() << endl;;             
    cout << q.dequeue() << endl ;             
    cout << q.dequeue() << endl;              

    return 0;
}
